[{"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\index.tsx":"1","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\reportWebVitals.ts":"2","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\App.tsx":"3","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\buttons\\IconButton.tsx":"4","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\buttons\\Button.tsx":"5","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\buttons\\ButtonAccent.tsx":"6","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\buttons\\ButtonText.tsx":"7","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\buttons\\ButtonWithIcon.tsx":"8","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\buttons\\RoundButton.tsx":"9","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\buttons\\ToggleButton.tsx":"10","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\inputs\\slider.tsx":"11","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\inputs\\TextField.tsx":"12","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\inputs\\Radio.tsx":"13","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\inputs\\CheckBox.tsx":"14","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\AppBar.tsx":"15","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\SideMenu.tsx":"16","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\SortingVisualizer.tsx":"17","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\inputs\\Select.tsx":"18","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\sortingAlgorithms\\MergeSort.tsx":"19","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\sortingAlgorithms\\QuickSort.tsx":"20","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\sortingAlgorithms\\template.functions.ts":"21","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\sortingAlgorithms\\HeapSort.ts":"22","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\sortingAlgorithms\\ShellSort.ts":"23","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\sortingAlgorithms\\InsertionSort.ts":"24","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\sortingAlgorithms\\SelectionSort.ts":"25","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\CompareSortingAlgorithms.tsx":"26","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\SynchronousSorting.ts":"27"},{"size":500,"mtime":1609945724099,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1383,"mtime":1610499765355,"results":"31","hashOfConfig":"29"},{"size":591,"mtime":1610457826961,"results":"32","hashOfConfig":"29"},{"size":488,"mtime":1610461804580,"results":"33","hashOfConfig":"29"},{"size":643,"mtime":1610287994384,"results":"34","hashOfConfig":"29"},{"size":514,"mtime":1610210486694,"results":"35","hashOfConfig":"29"},{"size":753,"mtime":1609990031088,"results":"36","hashOfConfig":"29"},{"size":707,"mtime":1610210504379,"results":"37","hashOfConfig":"29"},{"size":771,"mtime":1610335730700,"results":"38","hashOfConfig":"29"},{"size":1190,"mtime":1610464267248,"results":"39","hashOfConfig":"29"},{"size":461,"mtime":1610020687830,"results":"40","hashOfConfig":"29"},{"size":821,"mtime":1610069187010,"results":"41","hashOfConfig":"29"},{"size":1114,"mtime":1610083818057,"results":"42","hashOfConfig":"29"},{"size":2588,"mtime":1610210424373,"results":"43","hashOfConfig":"29"},{"size":385,"mtime":1610098705525,"results":"44","hashOfConfig":"29"},{"size":8931,"mtime":1610463761205,"results":"45","hashOfConfig":"29"},{"size":2141,"mtime":1610119976807,"results":"46","hashOfConfig":"29"},{"size":4655,"mtime":1610505107818,"results":"47","hashOfConfig":"29"},{"size":7045,"mtime":1610508001534,"results":"48","hashOfConfig":"29"},{"size":631,"mtime":1610425141465,"results":"49","hashOfConfig":"29"},{"size":4982,"mtime":1610508117727,"results":"50","hashOfConfig":"29"},{"size":3072,"mtime":1610508170896,"results":"51","hashOfConfig":"29"},{"size":3789,"mtime":1610508209529,"results":"52","hashOfConfig":"29"},{"size":4474,"mtime":1610508283473,"results":"53","hashOfConfig":"29"},{"size":10243,"mtime":1610514078103,"results":"54","hashOfConfig":"29"},{"size":3356,"mtime":1610512447520,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"ppngcm",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\index.tsx",[],["117","118"],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\reportWebVitals.ts",[],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\App.tsx",[],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\buttons\\IconButton.tsx",[],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\buttons\\Button.tsx",[],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\buttons\\ButtonAccent.tsx",[],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\buttons\\ButtonText.tsx",[],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\buttons\\ButtonWithIcon.tsx",["119"],"import {useState} from 'react';\r\nimport {Box} from '@material-ui/core/';\r\n\r\nexport default function ButtonWithIcon(props: any)\r\n{\r\n    const [disabled, set_disabled] = useState(props.disable);\r\n\r\n    return (\r\n        <button \r\n            title={props.title} \r\n            className={\"oval flat btn\"} \r\n            onClick={props.handleClick}\r\n            id={props.id}\r\n            style={{opacity: disabled ? '.4' : '1', \r\n                    pointerEvents: disabled ? 'none':'visible',\r\n                    padding: '.5rem 1.5rem'}}\r\n            >\r\n                <Box display=\"flex\">\r\n                    {props.label}\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <props.icon />\r\n                </Box>\r\n        </button>\r\n    )\r\n}",["120","121"],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\buttons\\RoundButton.tsx",[],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\buttons\\ToggleButton.tsx",[],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\inputs\\slider.tsx",[],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\inputs\\TextField.tsx",["122"],"import {useState} from 'react';\r\n\r\nexport default function TextInput (props: any)\r\n{\r\n\r\n    return (\r\n        <input \r\n            type={props.type}\r\n            className={\"thin-inset textInput\"}\r\n            placeholder={props.placeHolder}\r\n            autoFocus={props.autofocus}\r\n            id={props.id}\r\n            style={{color: props.error ? '#FF555D' : 'white',\r\n                    width: props.fullWidth ? '100%': 'auto'}}\r\n            />\r\n    )\r\n}",["123","124"],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\inputs\\Radio.tsx",["125"],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\inputs\\CheckBox.tsx",[],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\AppBar.tsx",[],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\SideMenu.tsx",[],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\SortingVisualizer.tsx",["126","127","128"],"import {useState} from 'react';\r\nimport {Box} from '@material-ui/core';\r\nimport Button from '../../components/buttons/Button';\r\nimport ButtonAccent from '../../components/buttons/ButtonAccent';\r\nimport ButtonText from '../../components/buttons/ButtonText';\r\nimport ToggleButton from '../../components/buttons/ToggleButton';\r\nimport Slider from '../../components/inputs/slider';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\n// Algorithms\r\nimport MergeSort from './sortingAlgorithms/MergeSort';\r\nimport QuickSort from './sortingAlgorithms/QuickSort';\r\nimport HeapSort from './sortingAlgorithms/HeapSort';\r\nimport ShellSort from './sortingAlgorithms/ShellSort';\r\nimport InsertionSort from './sortingAlgorithms/InsertionSort';\r\nimport SelectionSort from './sortingAlgorithms/SelectionSort';\r\nimport {BubbleSort} from './sortingAlgorithms/SelectionSort';\r\n\r\n// this indicates that the page loads for the first time\r\nlet first = true;\r\n\r\nexport default function SortingVisualizer (props: any): JSX.Element {\r\n\r\n    const [algoOptionsOpen,set_algoOptionsOpen] = useState(false);\r\n    const [chosenAlgo , set_chosenAlgo] = useState(\"Choose an algorithm\");\r\n    const [sortingSpeed , set_sortingSpeed] = useState(180);\r\n    const [sortDisabled, set_sortDisabled] = useState(true);\r\n    const [generateBtn_disabled, set_generateBtn_disabled] = useState(false);\r\n    const [arraySizeButton, set_arraySizeButton] = useState(false);\r\n    const [sortSpeed, set_sortSpeed] = useState(false);\r\n    const [descending, set_descending] = useState(false);\r\n    const [disableDescending, set_disableDescending] = useState(false);\r\n    const sortingAlgoList = [\r\n        \"Merge Sort\", \"Quick Sort\", \"Heap Sort\", \"Shell Sort\",\"Insertion Sort\", \r\n        \"Selection Sort\",\"Bubble Sort\"\r\n    ];\r\n\r\n    const [compareWindowHidden, set_CompareWindow] = useState(true);\r\n    const [compareButtonDisabled, set_compareButtonDisabled] = useState(false);\r\n    \r\n    const [arraySize, set_arraySize] = useState(150)\r\n\r\n    // random numbers generator range from 2 to 300\r\n    function generateRandom(size: number) {\r\n        let bars = (document.getElementsByClassName('bars') as HTMLCollectionOf<HTMLElement>)\r\n        for (let x = 0; x < bars.length; x++)\r\n            if (bars[x]) {\r\n                bars[x].style.backgroundColor = \"#0AFFEF\"\r\n                bars[x].style.transition = '.2s ease';\r\n            } \r\n        const array = [];\r\n        for(let x = 0; x < size; x++) {\r\n            const random = Math.floor(Math.random()*(300 - 2 + 1) + 2)\r\n            array.push(random);\r\n        }\r\n        return array;\r\n    }\r\n    // THe State Randome Numbers Array\r\n    const [randomNumbers, set_randomNumbers] = useState(generateRandom(150));\r\n\r\n    function changeArraySize(n: any) {\r\n        set_arraySize(n);\r\n        set_randomNumbers(generateRandom(n));\r\n        if (!first) {\r\n            set_sortDisabled(false);\r\n        }\r\n    }\r\n\r\n    function sort() {\r\n        // check what algorithm to be use\r\n        const index = sortingAlgoList.indexOf(chosenAlgo)           \r\n        first = false;\r\n        set_sortDisabled(true);\r\n        set_arraySizeButton(true);\r\n        set_sortSpeed(true);\r\n        set_generateBtn_disabled(true)\r\n        set_disableDescending(true)\r\n\r\n        if (index === 0) MergeSort(randomNumbers, sortingSpeed, descending, enablePanels);\r\n        else if (index === 1) QuickSort(randomNumbers, sortingSpeed, descending, enablePanels)\r\n        else if (index === 2) HeapSort(randomNumbers, sortingSpeed, descending, enablePanels);\r\n        else if (index === 3) ShellSort(randomNumbers, sortingSpeed, descending, enablePanels);\r\n        else if (index === 4) InsertionSort(randomNumbers, sortingSpeed, descending, enablePanels);\r\n        else if (index === 5) SelectionSort(randomNumbers, sortingSpeed, descending, enablePanels);\r\n        else if (index === 6) BubbleSort(randomNumbers, sortingSpeed, descending, enablePanels);\r\n    }\r\n\r\n    function enablePanels(t: number) {\r\n        setTimeout(() => {\r\n            set_generateBtn_disabled(false)\r\n            set_arraySizeButton(false);\r\n            set_sortSpeed(false);\r\n            set_disableDescending(false);   \r\n        }, t * (200 - sortingSpeed))\r\n    }\r\n\r\n    function changeSpeed(n: number) {\r\n        set_sortingSpeed(n);\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            p={4}\r\n            className=\"flat\"\r\n            style={{width: '98vw', height: '80vh', position: 'relative', \r\n            margin: 'auto', top: '1rem', overflow: 'hidden',\r\n                borderRadius: '10px'\r\n            }}>\r\n            \r\n\r\n            <Box id=\"sorting-windows\">\r\n                <div className=\"bars-container\">\r\n                    <div className=\"algo-options\">\r\n                        <Box className={\"sorting-algorithms\"} hidden={!algoOptionsOpen} >\r\n                            <div style={{pointerEvents: 'none'}} > <Box p={2} pl={1}>  </Box> </div>\r\n                            {\r\n                                sortingAlgoList.map((algo: any, index: number) => \r\n                                <div key={index}> <Box p={1} pl={2}  onClick={() => {\r\n                                    set_chosenAlgo(algo);\r\n                                    set_algoOptionsOpen(false);\r\n                                    set_sortDisabled(false)}} > {algo} </Box> </div>\r\n                                )\r\n                            }\r\n                        </Box>\r\n                        <Box flex={1} onClick={()=>{set_algoOptionsOpen(!algoOptionsOpen)}} >\r\n                            {chosenAlgo}    \r\n                        </Box>                \r\n                        <Box onClick={()=>{set_algoOptionsOpen(!algoOptionsOpen)}} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" > <ArrowDropDownIcon /> </Box>\r\n                    </div>\r\n                    {\r\n                        randomNumbers.map((num: number, index: number) => \r\n                            <div className=\"bars\" style={{height: num+'px'}} key={index} > </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                \r\n            </Box>\r\n\r\n            <div id=\"scroll\" >\r\n\r\n                <Box className=\"sorting-panel\">\r\n                <Box m={1} display=\"flex\" flexDirection=\"column\" alignContent=\"center\" justifyContent=\"center\">\r\n                    <Button disabled={generateBtn_disabled} label=\"Generate New Array\" handleClick={() => {\r\n                            set_randomNumbers(generateRandom(arraySize));\r\n                            if (!first) {\r\n                                set_sortDisabled(false);\r\n                                first = false;\r\n                            }\r\n                        }} />\r\n                </Box>\r\n\r\n                    <Box m={1} display=\"flex\" flexDirection=\"column\" alignContent=\"center\" justifyContent=\"center\">\r\n                        <Box pb={1} textAlign=\"center\" > Change Array Size </Box>\r\n                        <Slider disabled={arraySizeButton} id=\"array_size\" onInput={(n:any)=>changeArraySize(n)} color=\"accent\" min={5} max={300} value={arraySize} />\r\n                    </Box>\r\n                    <Box m={1} display=\"flex\" flexDirection=\"column\" alignContent=\"center\" justifyContent=\"center\">\r\n                        <Box pb={1} textAlign=\"center\" > Change Speed </Box>\r\n                        <Slider disabled={sortSpeed} id=\"sorting-speed\" onInput={(n:any)=>changeSpeed(n)} color=\"error\" min={5} max={198} value={sortingSpeed} />\r\n                    </Box>\r\n                    <Box m={2} style={{position: 'relative', bottom: '2px'}} display=\"flex\" flexDirection=\"column\" alignContent=\"center\" justifyContent=\"center\">\r\n                        <Box pb={1} textAlign=\"center\" > Descending </Box>\r\n                            <ToggleButton disabled={disableDescending} toggleOn={descending} color=\"accent\" title=\"Descending\" handleClick={() => {\r\n                                set_descending(!descending);\r\n                                if (!first) {\r\n                                    set_sortDisabled(false)   \r\n                                    first = false;\r\n                                }\r\n                            }} />\r\n                    </Box>\r\n\r\n                    <Box m={1} display=\"flex\" flexDirection=\"column\" alignContent=\"center\" justifyContent=\"center\">\r\n                        <ButtonAccent label=\"Sort !\" disabled={sortDisabled} handleClick={sort} title=\"Start sorting\" type=\"error\" />\r\n                    </Box>\r\n                    <Box m={1} display=\"flex\" flexDirection=\"column\" alignContent=\"center\" justifyContent=\"center\">\r\n                        <ButtonText label=\"Compare algorithms\" disabled={compareButtonDisabled} handleClick={props.showComparisonApp} title=\"Compare Algorithms\" />\r\n                    </Box>\r\n                </Box>\r\n            </div>\r\n        </Box>\r\n    )\r\n}","C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\inputs\\Select.tsx",[],["129","130"],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\sortingAlgorithms\\MergeSort.tsx",["131","132"],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\sortingAlgorithms\\QuickSort.tsx",["133"],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\sortingAlgorithms\\template.functions.ts",[],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\sortingAlgorithms\\HeapSort.ts",["134"],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\sortingAlgorithms\\ShellSort.ts",["135"],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\sortingAlgorithms\\InsertionSort.ts",["136"],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\sortingAlgorithms\\SelectionSort.ts",["137"],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\CompareSortingAlgorithms.tsx",["138","139","140"],"C:\\Users\\eeche\\Documents\\Development\\Projects\\visualizer\\src\\components\\visualizers\\SynchronousSorting.ts",["141","142"],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":6,"column":22,"nodeType":"149","messageId":"150","endLine":6,"endColumn":34},{"ruleId":"143","replacedBy":"151"},{"ruleId":"145","replacedBy":"152"},{"ruleId":"147","severity":1,"message":"153","line":1,"column":9,"nodeType":"149","messageId":"150","endLine":1,"endColumn":17},{"ruleId":"143","replacedBy":"154"},{"ruleId":"145","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":21,"column":61,"nodeType":"158","messageId":"159","endLine":21,"endColumn":63},{"ruleId":"147","severity":1,"message":"160","line":38,"column":12,"nodeType":"149","messageId":"150","endLine":38,"endColumn":31},{"ruleId":"147","severity":1,"message":"161","line":38,"column":33,"nodeType":"149","messageId":"150","endLine":38,"endColumn":50},{"ruleId":"147","severity":1,"message":"162","line":39,"column":35,"nodeType":"149","messageId":"150","endLine":39,"endColumn":60},{"ruleId":"143","replacedBy":"163"},{"ruleId":"145","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":26,"column":24,"nodeType":"167","messageId":"168","endLine":30,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":34,"column":24,"nodeType":"167","messageId":"168","endLine":36,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":64,"column":24,"nodeType":"167","messageId":"168","endLine":69,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":65,"column":24,"nodeType":"167","messageId":"168","endLine":70,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":43,"column":24,"nodeType":"167","messageId":"168","endLine":48,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":43,"column":24,"nodeType":"167","messageId":"168","endLine":48,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":43,"column":24,"nodeType":"167","messageId":"168","endLine":48,"endColumn":14},{"ruleId":"147","severity":1,"message":"170","line":1,"column":21,"nodeType":"149","messageId":"150","endLine":1,"endColumn":27},{"ruleId":"147","severity":1,"message":"171","line":21,"column":19,"nodeType":"149","messageId":"150","endLine":21,"endColumn":28},{"ruleId":"156","severity":1,"message":"172","line":65,"column":35,"nodeType":"158","messageId":"159","endLine":65,"endColumn":37},{"ruleId":"147","severity":1,"message":"173","line":11,"column":7,"nodeType":"149","messageId":"150","endLine":11,"endColumn":18},{"ruleId":"147","severity":1,"message":"174","line":12,"column":7,"nodeType":"149","messageId":"150","endLine":12,"endColumn":18},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"@typescript-eslint/no-unused-vars","'set_disabled' is assigned a value but never used.","Identifier","unusedVar",["175"],["176"],"'useState' is defined but never used.",["175"],["176"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'compareWindowHidden' is assigned a value but never used.","'set_CompareWindow' is assigned a value but never used.","'set_compareButtonDisabled' is assigned a value but never used.",["175"],["176"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'animations', 'animations'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'mainArray', 'mainArray'.","'Hidden' is defined but never used.","'set_algos' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'SWAP_CHANGE' is assigned a value but never used.","'SWAP_REVERT' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]